{"version":"3.3.2","examples":[{"description":"instantiates and saves the song, and it returns the new song that was created","full_description":"Song Class Methods .create instantiates and saves the song, and it returns the new song that was created","status":"passed","file_path":"./spec/song_class_methods_spec.rb","line_number":6,"run_time":0.002486274,"pending_message":null},{"description":"instantiates a song with a name property","full_description":"Song Class Methods .new_by_name instantiates a song with a name property","status":"passed","file_path":"./spec/song_class_methods_spec.rb","line_number":14,"run_time":0.000874975,"pending_message":null},{"description":"instantiates and saves a song with a name property","full_description":"Song Class Methods .create_by_name instantiates and saves a song with a name property","status":"passed","file_path":"./spec/song_class_methods_spec.rb","line_number":22,"run_time":0.000135469,"pending_message":null},{"description":"can find a song present in @@all by name","full_description":"Song Class Methods .find_by_name can find a song present in @@all by name","status":"passed","file_path":"./spec/song_class_methods_spec.rb","line_number":31,"run_time":0.000100433,"pending_message":null},{"description":"invokes .find_by_name and .create_by_name instead of repeating code","full_description":"Song Class Methods .find_or_create_by_name invokes .find_by_name and .create_by_name instead of repeating code","status":"passed","file_path":"./spec/song_class_methods_spec.rb","line_number":41,"run_time":0.010180369,"pending_message":null},{"description":"returns the existing Song object (doesn't create a new one) when provided the title of an existing Song","full_description":"Song Class Methods .find_or_create_by_name returns the existing Song object (doesn't create a new one) when provided the title of an existing Song","status":"passed","file_path":"./spec/song_class_methods_spec.rb","line_number":48,"run_time":0.000265847,"pending_message":null},{"description":"creates a new Song object with the provided title if one doesn't already exist","full_description":"Song Class Methods .find_or_create_by_name creates a new Song object with the provided title if one doesn't already exist","status":"passed","file_path":"./spec/song_class_methods_spec.rb","line_number":55,"run_time":0.001109627,"pending_message":null},{"description":"returns all the song instances in alphabetical order by song name","full_description":"Song Class Methods .alphabetical returns all the song instances in alphabetical order by song name","status":"passed","file_path":"./spec/song_class_methods_spec.rb","line_number":65,"run_time":0.000201242,"pending_message":null},{"description":"initializes a song and artist_name based on the filename format","full_description":"Song Class Methods .new_from_filename initializes a song and artist_name based on the filename format","status":"passed","file_path":"./spec/song_class_methods_spec.rb","line_number":75,"run_time":0.000167959,"pending_message":null},{"description":"initializes and saves a song and artist_name based on the filename format","full_description":"Song Class Methods .create_from_filename initializes and saves a song and artist_name based on the filename format","status":"passed","file_path":"./spec/song_class_methods_spec.rb","line_number":84,"run_time":0.000131188,"pending_message":null},{"description":"clears all the song instances from the @@all array","full_description":"Song Class Methods .destroy_all clears all the song instances from the @@all array","status":"passed","file_path":"./spec/song_class_methods_spec.rb","line_number":93,"run_time":9.057e-05,"pending_message":null}],"summary":{"duration":0.019527282,"example_count":11,"failure_count":0,"pending_count":0},"summary_line":"11 examples, 0 failures"}